[{"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/Button/index.tsx":"1","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/SignIn/index.tsx":"2","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/App.tsx":"3","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/utils/getValidationsErrors.ts":"4","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/ToastContainer/styles.ts":"5","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/ToastContainer/index.tsx":"6","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/hooks/ToastContext.tsx":"7","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/ToastContainer/Toast/index.tsx":"8","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/hooks/index.tsx":"9","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/ToastContainer/Toast/styles.ts":"10","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/Input/index.tsx":"11","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/SignIn/styles.ts":"12","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/routes/index.tsx":"13","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/SignUp/index.tsx":"14","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/SignUp/styles.ts":"15","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/Tooltip/styles.ts":"16","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/Dashboard/index.tsx":"17","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/Input/styles.ts":"18","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/hooks/AuthContext.tsx":"19"},{"size":324,"mtime":1611060217692,"results":"20","hashOfConfig":"21"},{"size":3261,"mtime":1613055352562,"results":"22","hashOfConfig":"21"},{"size":418,"mtime":1612957396056,"results":"23","hashOfConfig":"21"},{"size":373,"mtime":1611625992290,"results":"24","hashOfConfig":"21"},{"size":172,"mtime":1612881994176,"results":"25","hashOfConfig":"21"},{"size":830,"mtime":1612954432513,"results":"26","hashOfConfig":"21"},{"size":1520,"mtime":1612880349327,"results":"27","hashOfConfig":"21"},{"size":1255,"mtime":1612954711300,"results":"28","hashOfConfig":"21"},{"size":293,"mtime":1612877413202,"results":"29","hashOfConfig":"21"},{"size":1374,"mtime":1612954709576,"results":"30","hashOfConfig":"21"},{"size":1817,"mtime":1612617338134,"results":"31","hashOfConfig":"21"},{"size":1682,"mtime":1612959918141,"results":"32","hashOfConfig":"21"},{"size":508,"mtime":1613067039560,"results":"33","hashOfConfig":"21"},{"size":3429,"mtime":1613055368178,"results":"34","hashOfConfig":"21"},{"size":1688,"mtime":1612959929473,"results":"35","hashOfConfig":"21"},{"size":874,"mtime":1612619114107,"results":"36","hashOfConfig":"21"},{"size":144,"mtime":1613047558239,"results":"37","hashOfConfig":"21"},{"size":1291,"mtime":1612618731739,"results":"38","hashOfConfig":"21"},{"size":1848,"mtime":1612870628409,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"7ie19g",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/Button/index.tsx",[],["83","84"],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/SignIn/index.tsx",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/App.tsx",["85"],"import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport ToastContainer from './components/ToastContainer';\nimport AppProvider from './hooks';\nimport Routes from './routes';\n\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n  \n    <AppProvider>\n     <Routes />\n    </AppProvider>\n   \n    <GlobalStyle />\n  </BrowserRouter>\n);\n\n\nexport default App;\n",["86","87"],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/utils/getValidationsErrors.ts",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/ToastContainer/styles.ts",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/ToastContainer/index.tsx",["88"],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/hooks/ToastContext.tsx",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/ToastContainer/Toast/index.tsx",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/hooks/index.tsx",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/ToastContainer/Toast/styles.ts",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/Input/index.tsx",["89"],"import React, { InputHTMLAttributes, useEffect, useRef, useState, useCallback } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport Tooltip from '../Tooltip';\nimport { Container, Error } from './styles';\n\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    name: string;\n    icon?: React.ComponentType<IconBaseProps>;\n}\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [isFocused, setIsFocused] = useState(false);\n    const [isFilled, setIsFilled] = useState(false);\n    const {fieldName, defaultValue, error, registerField} = useField(name);\n    \n    \n    const handleInputBlur = useCallback(() => {\n        //explicacao usecallback Usabilidade do input 6.40m\n        setIsFocused(false)\n        setIsFilled(!!inputRef.current?.value);\n    }, [])\n    const handleInputFocus = useCallback(() => {\n        setIsFocused(true);\n    }, [])\n\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'value'\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused} >\n            { Icon && <Icon size={20}/> }\n            <input \n                onFocus={handleInputFocus}\n                onBlur={handleInputBlur}\n                defaultValue={defaultValue} \n                ref={inputRef} \n                {...rest} \n            />\n            {error  && (\n                <Error title={error}>\n                    <FiAlertCircle color=\"#c53030\" size={20}/>\n                </Error>\n            )}\n        </Container>\n    );\n}\n\nexport default Input;\n\n","/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/SignIn/styles.ts",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/routes/index.tsx",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/SignUp/index.tsx",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/SignUp/styles.ts",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/Tooltip/styles.ts",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/pages/Dashboard/index.tsx",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/components/Input/styles.ts",[],"/home/alex/Workspace/studies/rocketseat/gobarber/go-barber-web/src/hooks/AuthContext.tsx",["90"],"import userEvent from '@testing-library/user-event';\nimport React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\n\n\ninterface AuthState {\n    token: string;\n    user: object;\n}\n\ninterface SignInCredentials {\n    email: string;\n    password: string;\n}\n\ninterface AuthContextDATA {\n    user: object;\n    signIn(credentials: SignInCredentials): Promise<void>;\n    signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextDATA>({} as AuthContextDATA);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n    const [ data, setData ] = useState<AuthState>(()=>{\n        const token = localStorage.getItem('@GoBarber:token');\n        const user = localStorage.getItem('@GoBarber:user')\n        if (token && user){\n            return { token, user: JSON.parse(user) };\n        }\n        return {} as AuthState;\n\n    });\n\n    const signIn = useCallback( async ({email, password})=>{\n        const response = await api.post('sessions', {\n            email,\n            password,\n        });\n        \n        const { token, user } = response.data;\n        localStorage.setItem('@GoBarber:token', token);\n        localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n        setData({token, user})\n    },[])\n    \n    const signOut = useCallback(()=>{\n        localStorage.removeItem('@GoBarber:token');\n        localStorage.removeItem('@GoBarber:user');\n        \n        setData({} as AuthState)\n    },[])\n\n\n    return (\n        <AuthContext.Provider value={{user: data.user, signIn, signOut}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nfunction useAuth(): AuthContextDATA {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\n\nexport { useAuth }",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":22},{"ruleId":"91","replacedBy":"99"},{"ruleId":"93","replacedBy":"100"},{"ruleId":"95","severity":1,"message":"101","line":6,"column":24,"nodeType":"97","messageId":"98","endLine":6,"endColumn":32},{"ruleId":"95","severity":1,"message":"102","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":15},{"ruleId":"95","severity":1,"message":"103","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":17},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"@typescript-eslint/no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar",["104"],["105"],"'useToast' is defined but never used.","'Tooltip' is defined but never used.","'userEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]